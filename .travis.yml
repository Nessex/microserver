language: rust
matrix:
  include:
    - rust:
      - beta
      - nightly
    - os:
      - linux
      - osx
      - windows
  allow_failures:
  #   - rust: stable
  #   - rust: beta
    - rust: nightly
  fast_finish: true
stages:
  - test
  - name: deploy_linux
    if: tag IS present AND os = linux
  - name: deploy_osx
    if: tag IS present AND os = osx
  - name: deploy_windows
    if: tag IS present AND os = windows
jobs:
  include:
    - stage: test
      before_script:
        - rustup component add rustfmt-preview
        # - rustup component add clippy-preview --toolchain=nightly
        - rustup component add clippy-preview
      script:
        - cargo fmt --all -- --check
        - cargo clippy --all -- -D clippy::pedantic
    - stage: deploy_linux
      script:
        - cargo build --release
        - chmod +x target/release/microserver
        - gzip -k target/release/microserver
        - mv target/release/microserver.gz microserver_linux.gz
      deploy:
        provider: releases
        api_key: $gh_key
        file: microserver_linux.gz
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy_osx
      script:
        - cargo build --release
        - chmod +x target/release/microserver
        - gzip -k target/release/microserver
        - mv target/release/microserver.gz microserver_osx.gz
      deploy:
        provider: releases
        api_key: $gh_key
        file: microserver_osx.gz
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy_windows
      script:
        - cargo build --release
        - chmod +x target/release/microserver
        - gzip -k target/release/microserver
        - mv target/release/microserver.gz microserver_windows.gz
      deploy:
        provider: releases
        api_key: $gh_key
        file: microserver_windows.gz
        skip_cleanup: true
        on:
          tags: true  
